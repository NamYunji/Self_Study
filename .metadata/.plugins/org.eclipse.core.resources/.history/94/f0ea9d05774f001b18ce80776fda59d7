package _2021_01_06.object;

import java.util.Scanner;

/**
- BankAccountTest 클래스 - main 메소드에서 다음을 수행 

   (1) 계좌번호 1, 예금주명 kim, 잔액 9000으로 초기화한 은행계좌 생성(account1 이라고 하자)
   (2) 계좌번호 2, 예금주명 lee로 초기화한 은행계좌 생성(account2 라고 하자)
 
   (3) 사용자로부터 입금액을 입력받아 account1에 입금
   (4) 사용자로부터 출금액을 입력받아 account1에서 출금

   (5) 사용자로부터 입금액을 입력받아 account2에 입금
   (6) 사용자로부터 출금액을 입력받아 account2에서 출금

   (7) 사용자로부터 송금액을 입력받아 account2에게 account1로 송금하도록 지시
   (8) 사용자로부터 송금액을 입력받아 account2에게 account1로 송금하도록 지시

   (9) account2의 예금주명을 park으로 수정
   (10) account2의 계좌번호, 예금주명, 잔액 출력

   (11) account1의 계좌번호, 예금주명, 잔액 출력

   ** 사용자가 입력하는 입금액, 출금액, 송금액은 모두 양수라고 가정해도 됨
 */


public class BankAccountTest {
	
	public static void main(String[] args) {
//	   (1) 계좌번호 1, 예금주명 kim, 잔액 9000으로 초기화한 은행계좌 생성(account1 이라고 하자)
//	   (2) 계좌번호 2, 예금주명 lee로 초기화한 은행계좌 생성(account2 라고 하자)
		BankAccount account1 = new BankAccount(1, "kim", 9000);
		BankAccount account2 = new BankAccount(2, "lee");
		
		Scanner scanner = new Scanner(System.in);
//	   (3) 사용자로부터 입금액을 입력받아 account1에 입금
//	   (4) 사용자로부터 출금액을 입력받아 account1에서 출금
		System.out.print("account1 입금액 : ");
		account1.deposit(scanner.nextInt());
		System.out.print("account1 출금액 :");
		account1.withdraw(scanner.nextInt());
		
//	   (5) 사용자로부터 입금액을 입력받아 account2에 입금
//	   (6) 사용자로부터 출금액을 입력받아 account2에서 출금
		System.out.print("account2 입금액 : ");
		account2.deposit(scanner.nextInt());
		System.out.print("account2 출금액 :");
		account2.withdraw(scanner.nextInt());
		
//	   (7) 사용자로부터 송금액을 입력받아 account2에게 account1로 송금하도록 지시
//	   (8) 사용자로부터 송금액을 입력받아 account2에게 account1로 송금하도록 지시
//		account2.
		
//	   (9) account2의 예금주명을 park으로 수정
		account2.setName("park");
//	   (10) account2의 계좌번호, 예금주명, 잔액 출력
		System.out.println(account2.getAccountNum() + account2.getName() + account2.getBalance());
		
//	   (11) account1의 계좌번호, 예금주명, 잔액 출력
		System.out.println(account1.getAccountNum() + account1.getName() + account1.getBalance());
		
	}
		
	}
